version: '3.7'

services:
  #kafka related stuff
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - wikimedia-network
    restart: always
    volumes:
      - zookeeper-data:/var/lib/zookeeper

  kafka:
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.16.238.30:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'true'
      KAFKA_CONFLUENT_SUPPORT_METRICS_REPORTER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      KAFKA_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor,io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor'
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      wikimedia-network:
        ipv4_address: 172.16.238.30
    restart: always
    volumes:
      - kafka-data:/var/lib/kafka

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:latest
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://172.16.238.30:9092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081"
    networks:
      - wikimedia-network
    restart: always
    volumes:
      - schema-registry-data:/var/lib/schema-registry

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    depends_on:
      - kafka
      - kafka-schema-registry
      - zookeeper
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
    networks:
      wikimedia-network:
        ipv4_address: 172.16.238.13
    restart: always
    volumes:
      - control-center-data:/var/lib/control-center

  #opensearch related stuff
  opensearch:
    image: opensearchproject/opensearch:1.2.4
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true" # disable https and logins
      compatibility.override_main_response_version: "true"
    ports:
      - 9200:9200
      - 9300:9300
      - 9600:9600 # required for Performance Analyzer
    networks:
      - wikimedia-network
    restart: always
    volumes:
      - opensearch-data:/usr/share/opensearch/data

  # console at http://localhost:5601/app/dev_tools#/console
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:1.2.0
    ports:
      - 5601:5601
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"
    networks:
      wikimedia-network:
        ipv4_address: 172.16.238.12
    restart: always
    volumes:
      - dashboards-data:/usr/share/opensearch-dashboards/data

  grafana:
    image: grafana/grafana:latest-ubuntu
    depends_on:
      - kafka
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: hamedkarbasi93-kafka-datasource,yesoreyeram-infinity-datasource
    networks:
      wikimedia-network:
    volumes:
      - grafana-storage:/var/lib/grafana

  #  applications
  wikimedia-producer:
    build:
      context: ../wikimedia-producer
      dockerfile: Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
    restart: always
    depends_on:
      - kafka
      - zookeeper
    volumes:
      - wikimedia-producer-data:/app/data
    networks:
      wikimedia-network:
        ipv4_address: 172.16.238.10

  wikimedia-consumer:
    build:
      context: ../wikimedia-consumer
      dockerfile: Dockerfile
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:9092
      OPENSEARCH_SERVER: opensearch:9200
    restart: always
    depends_on:
      - kafka
      - zookeeper
      - opensearch
    volumes:
      - wikimedia-consumer-data:/app/data
    networks:
      wikimedia-network:
        ipv4_address: 172.16.238.11

#  wikimedia-stream-processor:
#    build:
#      context: ../wikimedia-stream-processor
#      dockerfile: Dockerfile
#    environment:
#      KAFKA_BOOTSTRAP_SERVER: kafka:9092
#    depends_on:
#      - kafka
#      - zookeeper
#      - wikimedia-producer
#    volumes:
#      - wikimedia-stream-processor-data:/app/data
#    networks:
#      wikimedia-network:
#        ipv4_address: 172.16.238.14

networks:
  wikimedia-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24

volumes:
  zookeeper-data:
  kafka-data:
  schema-registry-data:
  control-center-data:
  opensearch-data:
  dashboards-data:
  grafana-storage:
  wikimedia-producer-data:
  wikimedia-consumer-data:
#  wikimedia-stream-processor-data:
